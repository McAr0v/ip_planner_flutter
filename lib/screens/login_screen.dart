import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';

import '../user/user_custom.dart';

class LoginScreen extends StatefulWidget {
  const LoginScreen({super.key});


  @override
  LoginScreenState createState() => LoginScreenState();

}

// ----- –≠–ö–†–ê–ù –í–•–û–î–ê ------

class LoginScreenState extends State<LoginScreen> {

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∞—Å—Å —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –¥–ª—è –≤—Ö–æ–¥–∞
  //final AuthWithEmail authWithEmail = AuthWithEmail();

  // –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
  final TextEditingController emailController = TextEditingController();
  final TextEditingController passwordController = TextEditingController();

  // –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –ø—Ä–æ—Ñ–∏–ª—å
  void navigateToProfile() {
    Navigator.pushNamedAndRemoveUntil(
      context,
      '/Profile', // –ù–∞–∑–≤–∞–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –∑–∞–¥–∞–µ—Ç–µ –≤ MaterialApp
          (route) => false,
    );
  }

  // –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –º–µ–Ω—é
  /*void showSnackBar(String message, Color color, int showTime) {
    final snackBar = customSnackBar(message: message, backgroundColor: color, showTime: showTime);
    ScaffoldMessenger.of(context).showSnackBar(snackBar);
  }*/

  // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è "–∑–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å" –∏ "–ú–æ–∂–µ—Ç –Ω—É–∂–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è?"

  bool showForgotPasswordButton = false;
  bool showRegButton = false;

  bool loading = false;

  // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è "–ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?"
  void updateForgotPasswordButton(bool newValue) {
    setState(() {
      showForgotPasswordButton = newValue;
    });
  }

  // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è "–ú–æ–∂–µ—Ç –Ω—É–∂–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è?"
  void updateShowRegButton(bool newValue) {
    setState(() {
      showRegButton = newValue;
    });
  }

  // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è - –ø–æ–∫–∞–∑–∞—Ç—å / —Å–∫—Ä—ã—Ç—å –ø–∞—Ä–æ–ª—å
  bool _isObscured = true;

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–º–µ–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –ø–æ–∫–∞–∑—ã–≤–∞—é—â–µ–π / —Å–∫—Ä—ã–≤–∞—é—â–µ–π –ø–∞—Ä–æ–ª—å
  void _togglePasswordVisibility() {
    setState(() {
      _isObscured = !_isObscured;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(
          title: const Text('–í—Ö–æ–¥'),
        ),
        body: Stack (
          children: [
            if (loading) const Center(
              child: CircularProgressIndicator(),
            )

            else SingleChildScrollView(
              padding: const EdgeInsets.fromLTRB(20, 50, 20, 50),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                mainAxisAlignment: MainAxisAlignment.center,
                children: [

                  // --- –ó–ê–ì–û–õ–û–í–û–ö –ò –ü–û–î–ü–ò–°–¨

                  Text('–í—Ö–æ–¥', style: Theme.of(context).textTheme.titleLarge,),
                  const SizedBox(height: 15.0),
                  Text('–ü—Ä–∏–≤–µ—Ç, –¥—Ä—É–∂–∏—â–µ! –°–∫—É—á–∞–ª–∏ –ø–æ —Ç–µ–±–µ! –í—Ö–æ–¥–∏ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç –∏ –æ–∫—É–Ω–∏—Å—å –≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä—É —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π. üöÄüòä', style: Theme.of(context).textTheme.bodyMedium,),
                  const SizedBox(height: 25.0),

                  // --- –ü–û–õ–ï EMAIL -----

                  TextField(
                    style: Theme.of(context).textTheme.bodyMedium,
                    controller: emailController,
                    decoration: const InputDecoration(
                      labelText: 'Email',
                      prefixIcon: Icon(Icons.email),
                    ),
                  ),
                  const SizedBox(height: 16.0),

                  // ---- –ü–û–õ–ï –ü–ê–†–û–õ–¨ -----

                  TextField(
                    style: Theme.of(context).textTheme.bodyMedium,
                    controller: passwordController,
                    decoration: InputDecoration(
                        prefixIcon: const Icon(Icons.key),
                        labelText: '–ü–∞—Ä–æ–ª—å',
                        suffixIcon: IconButton(
                          icon: Icon(
                            _isObscured ? Icons.visibility : Icons.visibility_off,
                          ),
                          onPressed: _togglePasswordVisibility,
                        )
                    ),
                    // –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å / —Å–∫—Ä—ã—Ç—å –ø–∞—Ä–æ–ª—å
                    obscureText: _isObscured,
                  ),
                  const SizedBox(height: 16.0),

                  // --- –ö–ù–û–ü–ö–ê –í–û–ô–¢–ò -----

                  TextButton(
                      onPressed: () async {

                        setState(() {
                          loading = true;
                        });

                        // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                        String email = emailController.text;
                        String password = passwordController.text;

                        // –í—ã–ø–æ–ª–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≤—Ö–æ–¥–∞
                        //String? uid = await authWithEmail.signInWithEmailAndPassword(email, password, context);

                        String? uid = await UserCustom.createUserWithEmailAndPassword(email, password);

                        if (uid != null) {

                          // –û–ë–†–ê–ë–û–¢–ö–ê –û–®–ò–ë–û–ö
                          // TODO –°–¥–µ–ª–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç –¥–ª—è —Å–Ω–∞–∫–±–∞—Ä–∞ –æ—Ç –∫–æ–¥–∞ –æ—à–∏–±–∫–∏
                          if (uid == 'wrong-password') {
                            setState(() {
                              loading = false;
                            });
                            updateShowRegButton(false);
                            updateForgotPasswordButton(true);
                            //showSnackBar('–£–ø—Å! –ü–∞—Ä–æ–ª—å –Ω–µ –≤–µ—Ä–µ–Ω( –î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑ ‚Äì –º—ã –≤–µ—Ä–∏–º –≤ —Ç–≤–æ—é –ø–∞–º—è—Ç—å! üîêüîÑ', AppColors.attentionRed, 5);
                          } else if (uid == 'user-not-found') {
                            setState(() {
                              loading = false;
                            });
                            updateShowRegButton(true);
                            updateForgotPasswordButton(false);
                            //showSnackBar('–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç–∞–∫–æ–π Email –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. –ú–æ–∂–µ—Ç, –æ–ø–µ—á–∞—Ç–∫–∞? –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–πc—è! üìßü§î', AppColors.attentionRed, 5);
                          } else if (uid == 'too-many-requests') {
                            setState(() {
                              loading = false;
                            });
                            updateShowRegButton(false);
                            updateForgotPasswordButton(false);
                            //showSnackBar('–û–π! –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–æ–ø—ã—Ç–æ–∫. –í —Ü–µ–ª—è—Ö –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –º—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –≤—Ö–æ–¥ —Å —Ç–≤–æ–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ! üîí‚è≥', AppColors.attentionRed, 5);
                          } else if (uid == 'channel-error') {
                            setState(() {
                              loading = false;
                            });
                            updateShowRegButton(false);
                            updateForgotPasswordButton(false);
                            //showSnackBar('–ß—Ç–æ-—Ç–æ –ø—Ä–æ–ø—É—â–µ–Ω–æ! –î–∞–≤–∞–π—Ç–µ –≤–º–µ—Å—Ç–µ –∑–∞–ø–æ–ª–Ω–∏–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–æ–ª—è, —á—Ç–æ–±—ã –≤—ã –º–æ–≥–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤–µ—Å–µ–ª—å–µ.', AppColors.attentionRed, 5);
                          } else if (uid == 'invalid-email') {
                            setState(() {
                              loading = false;
                            });
                            updateShowRegButton(false);
                            updateForgotPasswordButton(false);
                            //showSnackBar('–û–π, —á—Ç–æ-—Ç–æ —Å —Ñ–æ—Ä–º–∞—Ç–æ–º Email –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –£–¥–æ—Å—Ç–æ–≤–µ—Ä—å—Å—è, —á—Ç–æ –≤–≤–æ–¥–∏—à—å –µ–≥–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –∏ –¥–∞–≤–∞–π –µ—â–µ —Ä–∞–∑! üì≠üîÑ', AppColors.attentionRed, 5);
                          } else {
                            setState(() {
                              loading = false;
                            });
                            //showSnackBar('–ü–∏–Ω–≥–≤–∏–Ω –≤–æ—à–µ–ª –≤ —Ö–æ–ª–ª. –ü–æ–≤—Ç–æ—Ä—è—é, –ø–∏–Ω–≥–≤–∏–Ω –≤–æ—à–µ–ª –≤ —Ö–æ–ª–ª! –í–∞—à –≤—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω, –≥–µ—Ä–æ–π. –ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ –≤–µ—Å–µ–ª—å—é! üêßüåü', Colors.green, 2);
                            navigateToProfile();
                          }

                        } else {

                          setState(() {
                            loading = false;
                          });

                          //showSnackBar('–û–π-–æ–π! –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —à–∞–ª–æ—Å—Ç–∏, –Ω–∞–≤–µ—Ä–Ω–æ–µ. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ, –º—ã –Ω–∞–¥ —ç—Ç–∏–º —Ä–∞–±–æ—Ç–∞–µ–º!', AppColors.attentionRed, 2);

                        }
                      },
                      child: Text('–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è')
                  ),
                ],
              ),
            ),
          ],
        )
    );
  }
}